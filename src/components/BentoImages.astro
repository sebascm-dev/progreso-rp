---
import { db, News } from "astro:db";
const noticias = await db.select().from(News);
---

<section class="flex flex-col justify-center w-full items-center">
  <article
    class="grid sm:grid-cols-4 sm:grid-rows-2 h-auto w-full rounded-xl gap-5 grid-cols-1 auto-rows-auto"
  >
    <img
      class="image object-cover md:block hidden h-full w-full shadow-xl rounded-md"
      src="/img/imagen7.webp"
    />
    <div
      class="image p-4 relative h-auto w-full shadow-xl rounded-md sm:col-span-4 md:col-span-2 border border-transparent transition-colors duration-300 hover:border-[#21bfdb49]"
    >
      <h1 class="text-2xl lg:text-4xl font-pricedown uppercase">
        nuestras Ãºltimas <span
          class="text-transparent bg-clip-text bg-gradient-to-r to-[#1BD1C2] from-[#15A9CE]"
          >novedades</span
        >:
      </h1>
      <ul class="mt-2">
        {
          noticias
            .slice(-5)
            .reverse()
            .map((noticia) => (
              <li class="grid grid-cols-7 lg:grid-cols-9 mb-2 gap-12 grid-rows-1 place-items-start text-left place-content-center">
                <span class="text-xl tabular-nums font-pricedown">
                  {noticia.date}
                </span>
                <p class="col-span-6 lg:col-span-8 text-left text-pretty mt-[3px] md:mt-0.5">
                  {noticia.text}.
                </p>
              </li>
            ))
        }
      </ul>
      <img
        src="/img/imagen3.webp"
        class="h-full w-full inset-0 absolute object-cover rounded-md opacity-15 blur-sm"
        alt=""
      />
    </div>

    <img
      class="image object-cover h-full w-full md:block hidden shadow-xl rounded-md sm:row-span-2"
      src="/img/imagen6.webp"
    />
    <img
      class="image object-cover h-full w-full md:block hidden shadow-xl rounded-md sm:col-span-2"
      src="/img/imagen4.webp"
    />
    <img
      class="image object-cover h-full w-full md:block shadow-xl hidden rounded-md"
      src="/img/imagen5.webp"
    />
  </article>
</section>

<style>
  article {
    transform: perspective(1000px);
    transform-style: preserve-3d;
  }
</style>

<script>
  const images = document.getElementsByClassName("image");

  Array.from(images).forEach((image) => {
    const imageElement = image as HTMLElement;

    imageElement.addEventListener("mousemove", (event) => {
      imageElement.style.transition = "transform .03s ease-in-out";

      const { offsetX, offsetY } = event as MouseEvent;

      const { width, height } = imageElement.getBoundingClientRect();
      const halfWidth = width / 2;
      const halfHeight = height / 2;

      const rotationX = ((halfHeight - offsetY) / halfHeight) * 4;
      const rotationY = ((offsetX - halfWidth) / halfWidth) * 4;

      imageElement.style.transform = `rotateX(${rotationX}deg) rotateY(${rotationY}deg)`;
    });

    imageElement.addEventListener("mouseleave", () => {
      imageElement.style.transition = `transform 1s ease-in-out`;
      imageElement.style.transform = `rotateX(0deg) rotateY(0deg)`;
    });
  });
</script>
